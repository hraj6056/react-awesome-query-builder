{"version":3,"file":"554.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialIcon.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/cel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks, Utils } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst emptyArray = [];\n\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\"\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.groupTitle;\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {getOptionLabel(option)}\n      </span>\n    );\n    return <Chip\n      key={option.value}\n      classes={classesChip}\n      label={titleSpan}\n      size={\"small\"}\n      //variant={getOptionIsCustom(option) ? \"outlined\" : undefined}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    const { title, renderTitle, value, specialValue, isHidden } = option;\n    const isSelected = selected;\n    //const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {renderTitle || title}\n      </span>\n    );\n    if (isHidden)\n      return null;\n    if (multiple) {\n      if (specialValue)\n        return (\n          <Box>\n            {renderTitle || title}\n          </Box>\n        );\n      else\n        return (\n          <Box>\n            {selected ? checkedIcon : nonCheckedIcon}\n            {titleSpan}\n          </Box>\n        );\n    } else {\n      if (specialValue)\n        return <React.Fragment>{renderTitle || title}</React.Fragment>;\n      else\n        return <React.Fragment>{titleSpan}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableClearable={disableClearable}\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({items, selectedKey, setField, isValueField, ...rest}, config) => {\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DragHandle from \"@material-ui/icons/DragHandle\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"inherit\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type];\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default (props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialIcon from \"./core/MaterialIcon\";\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialIcon,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder, errorText}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        error={!!errorText}\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MaterialWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MaterialFieldAutocomplete, MaterialFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MaterialFieldAutocomplete, props)\n    : RCE(MaterialFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n\n  renderFunc: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MaterialConjs}}) => RCE(MaterialConjs, props),\n  renderSwitch: (props, {RCE, W: {MaterialSwitch}}) => RCE(MaterialSwitch, props),\n  renderButton: (props, {RCE, W: {MaterialButton}}) => RCE(MaterialButton, props),\n  renderIcon: (props, {RCE, W: {MaterialIcon}}) => RCE(MaterialIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MaterialButtonGroup}}) => RCE(MaterialButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderProvider: (props, {RCE, W: {MaterialProvider}}) => RCE(MaterialProvider, props),\n  renderConfirm: (props, {W: {MaterialConfirm}}) => MaterialConfirm(props),\n  useConfirm: ({W: {MaterialUseConfirm}}) => MaterialUseConfirm(),\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MaterialTextWidget}}) => RCE(MaterialTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MaterialTextAreaWidget}}) => RCE(MaterialTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MaterialNumberWidget}}) => RCE(MaterialNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MaterialMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, props) \n        : RCE(MaterialSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MaterialSliderWidget}}) => RCE(MaterialSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MaterialBooleanWidget}}) => RCE(MaterialBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MaterialDateWidget}}) => RCE(MaterialDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MaterialTimeWidget}}) => RCE(MaterialTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MaterialDateTimeWidget}}) => RCE(MaterialDateTimeWidget, props),\n  },\n\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MaterialRangeWidget}}) => RCE(MaterialRangeWidget, props),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MaterialWidgets,\n  },\n};\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\nimport {default as uuid} from \"./uuid\";\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null) {\n    Object.keys(obj).forEach(prop => {\n      deepFreeze(obj[prop]);\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return v;\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {jsToImmutable} from \"../import/tree\";\n\nexport {toImmutableList, jsToImmutable, immutableToJs, isImmutable};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).toArray() : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    let depth;\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n        if (hasChildren && !isRuleGroup) { // tip: don't count children of rule_group\n          depth = (subinfo.depth || 0) + 1;\n        }\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n    if (depth != undefined) {\n      Object.assign(items[id], {\n        depth: depth,\n      });\n      info.depth = Math.max(info.depth || 0, depth);\n    }\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config, undefined, true);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(v => {\n        const vJs = v?.toJS?.();\n        if (vJs?.func) {\n          return v.toOrderedMap();\n        } else if(v?.toJS) {\n          // for values of multiselect use Array instead of List\n          return vJs;\n        } else {\n          return v;\n        }\n      }).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = () => {\n  return {\n    errors: []\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n  const fieldType = fieldConfig?.type;\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta();\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta());\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\") return val.substring(1, val.length - 1);\n  else return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters.\n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map((v) => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (\n          numberJavaTypes.includes(javaType)\n          && numberJavaTypes.includes(jt)\n        ) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else\n          throw new Error(\n            `spelEscape: Can't use different types in array: found ${javaType} and ${jt}`\n          );\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map((v) => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map((v) => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n\n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (\n  val,\n  numberToFloat = false,\n  arrayToArray = false\n) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return val ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val)) return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default:\n    return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map((part) => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\" + part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\" + part.value;\n        }\n        return undefined;\n      })\n      .filter((r) => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined) return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts\n    .map((child) => {\n      if (child.valueSrc == \"value\") {\n        if (child.value === null) {\n          return undefined;\n        } else {\n          return {\n            type: \"const\",\n            value: child.value,\n          };\n        }\n      } else if (child.valueSrc == \"field\") {\n        return {\n          type: child.isVariable ? \"variable\" : \"property\",\n          value: child.value,\n        };\n      } else {\n        errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n      }\n    })\n    .filter((v) => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nconst celInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map((v) => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`celEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (\n          numberJavaTypes.includes(javaType)\n          && numberJavaTypes.includes(jt)\n        ) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else\n          throw new Error(\n            `celEscape: Can't use different types in array: found ${javaType} and ${jt}`\n          );\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map((v) => celEscape(v, true));\n  } else {\n    escapedVals = vals.map((v) => celEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[][${escapedVals.join(\", \")}]`;\n  } else {\n    res = `[${escapedVals.join(\", \")}]`;\n  }\n\n  return res;\n};\n\nexport const celEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return val ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val)) return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return celInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"celEscape: Object is not supported\");\n    }\n  default:\n    return spelEscapeString(val);\n  }\n};\n","import {\n  getFieldConfig,\n  getOperatorConfig,\n  getFieldWidgetConfig,\n  getFuncConfig,\n  extendConfig,\n  getFieldParts,\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp,\n  formatFieldName,\n  getFieldPartsConfigs,\n  completeValue,\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {\n  defaultValue,\n  logger,\n  widgetDefKeysToOmit,\n  opDefKeysToOmit,\n} from \"../utils/stuff\";\nimport { defaultConjunction } from \"../utils/defaultUtils\";\nimport { List, Map } from \"immutable\";\nimport { spelEscape } from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if (type === \"group\" || type === \"rule_group\") {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config,\n    properties,\n    meta,\n    null,\n    parentField,\n    \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n\n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0; i < cases.length; i++) {\n    if (i != cases.length - 1 && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == cases.length - 1 && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\",\n    right = \"\";\n  for (let i = 0; i < filteredCases.length; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined) value = \"null\";\n    if (cond == undefined) cond = \"true\";\n    if (i != filteredCases.length - 1) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction) conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const { fieldSeparator } = config.settings;\n\n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition\n    = (groupOperator && getOperatorConfig(config, realGroupOperator, field))\n    || null;\n  const isGroup0\n    = isRuleGroup\n    && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n\n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config,\n    properties,\n    meta,\n    realGroupOperator,\n    parentField,\n    null\n  );\n\n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined) return undefined;\n  } else {\n    if (!list.size) return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size\n    ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets)\n    : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter\n      ? `${formattedField}.?[${filter}]${getSize}`\n      : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta,\n      config,\n      properties,\n      filteredSize,\n      groupValue,\n      realGroupOperator,\n      valueSrc,\n      valueType,\n      isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) =>\n        k == 0 ? field : cardinality > 1 ? values[k - 1] : values\n      );\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) =>\n        k == 0 ? field : cardinality > 1 ? values[k - 1] : values\n      );\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (\n  meta,\n  config,\n  properties,\n  formattedField,\n  formattedValue,\n  operator,\n  valueSrc,\n  valueType,\n  isRev = false\n) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn\n    = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(\n      `Operator ${operator} is not supported for value source ${valueSrc}`\n    );\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null) return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config,\n    properties,\n    meta,\n    realOp,\n    parentField,\n    null\n  );\n  if (formattedValue === undefined) return undefined;\n\n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined) return undefined;\n\n  // format expression\n  let res = formatExpression(\n    meta,\n    config,\n    properties,\n    formattedField,\n    formattedValue,\n    realOp,\n    valueSrc,\n    valueType,\n    isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\") return formatFunc(meta, config, field, parentField);\n  else return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (\n  config,\n  properties,\n  meta,\n  operator,\n  parentField,\n  expectedValueType = null\n) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (\n    expectedValueType == \"!case_value\"\n    || (iValueType && iValueType.get(0) == \"case_value\")\n  ) {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(\n        getFieldWidgetConfig(config, field, operator, widget, valueSrc),\n        [\"factory\"]\n      );\n      const fv = formatValue(\n        meta,\n        config,\n        cValue,\n        valueSrc,\n        valueType,\n        fieldWidgetDef,\n        fieldDef,\n        operator,\n        operatorDefinition,\n        parentField,\n        asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter((v) => v === undefined).size > 0;\n    if (!(fvalue.size < cardinality || hasUndefinedValues)) {\n      formattedValue\n        = cardinality > 1\n          ? fvalue.toArray()\n          : cardinality == 1\n            ? fvalue.first()\n            : null;\n    }\n  }\n\n  return [\n    formattedValue,\n    valueSrcs.length > 1 ? valueSrcs : valueSrcs[0],\n    valueTypes.length > 1 ? valueTypes : valueTypes[0],\n  ];\n};\n\nconst formatValue = (\n  meta,\n  config,\n  currentValue,\n  valueSrc,\n  valueType,\n  fieldWidgetDef,\n  fieldDef,\n  operator,\n  operatorDef,\n  parentField = null,\n  asyncListValues\n) => {\n  if (currentValue === undefined) return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues,\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {};\n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const { fieldSeparator } = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (\n        parentCnf.type == \"!struct\"\n        || (parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n      )\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator,\n    };\n  });\n  const formattedField = formatFieldFn.call(\n    config.ctx,\n    fieldName,\n    parentField,\n    fieldParts,\n    fieldPartsMeta,\n    fieldDefinition,\n    config\n  );\n  return formattedField;\n};\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const { defaultValue, isOptional } = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal\n      ? argVal.get(\"asyncListValues\")\n      : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(\n      config,\n      argConfig,\n      operator,\n      argValueSrc\n    );\n    const fieldWidgetDef = omit(\n      getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc),\n      [\"factory\"]\n    );\n\n    const formattedArgVal = formatValue(\n      meta,\n      config,\n      argValue,\n      argValueSrc,\n      argConfig.type,\n      fieldWidgetDef,\n      fieldDef,\n      null,\n      null,\n      parentField,\n      argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\")\n        // don't triger error if args value is another uncomplete function\n        meta.errors.push(\n          `Can't format value of arg ${argKey} for func ${funcKey}`\n        );\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (\n      formattedArgVal === undefined\n      && !isOptional\n      && defaultValue != undefined\n    ) {\n      const defaultWidget = getWidgetForFieldOp(\n        config,\n        argConfig,\n        operator,\n        defaultValueSrc\n      );\n      const defaultFieldWidgetDef = omit(\n        getFieldWidgetConfig(\n          config,\n          argConfig,\n          operator,\n          defaultWidget,\n          defaultValueSrc\n        ),\n        [\"factory\"]\n      );\n      formattedDefaultVal = formatValue(\n        meta,\n        config,\n        defaultValue,\n        defaultValueSrc,\n        argConfig.type,\n        defaultFieldWidgetDef,\n        fieldDef,\n        null,\n        null,\n        parentField,\n        argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\")\n          // don't triger error if args value is another uncomplete function\n          meta.errors.push(\n            `Can't format default value of arg ${argKey} for func ${funcKey}`\n          );\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape\n        ? finalFormattedVal\n        : argValue ?? defaultValue;\n    } else {\n      if (!isOptional) missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [formattedArgs];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc.replace(/\\${(\\w+)}/g, (found, argKey) => {\n      return formattedArgs[argKey] ?? found;\n    });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter((argKey) => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined) break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    spel.isUnary = true;\n    return convertOp(spel.children[0], conv, config, meta, spel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ]\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertArg(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  let {defaultOperator} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  if (defaultOperator && !fieldOperators.includes(defaultOperator))\n    defaultOperator = null;\n  let fieldDefaultOperator = fieldConfig?.defaultOperator;\n  if (fieldDefaultOperator && !fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  const fieldHasExplicitDefOp = fieldConfig?._origDefaultOperator;\n  const op = fieldHasExplicitDefOp && fieldDefaultOperator || defaultOperator || fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp, isCompletedValue, isEmptyRuleProperties} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field) {\n    if (!availOps?.length) {\n      console.warn(`Type of field ${field} is not supported`);\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n        properties = properties.set(\"operator\", operator);\n      } else {\n        console.warn(`Operator ${operator} is not supported for field ${field}`);\n        operator = null;\n      }\n    }\n  }\n  if (operator == null) {\n    // do not unset operator ?\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n    properties = properties.delete(\"valueError\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  } else {\n    properties = properties.delete(\"valueError\");\n  }\n\n  const newSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  //const isCompleted = !!operator && !isEmptyRuleProperties(properties.toObject(), config, false);\n  const isValueCompleted = value \n    && value.filter((v, delta) => !isCompletedValue(v, valueSrc.get(delta), config)).size == 0;\n  const isFieldCompleted = isCompletedValue(field, fieldSrc, config);\n  const isCompleted = isFieldCompleted && operator && isValueCompleted;\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isCompleted && removeIncompleteRules) {\n    let reason = \"Uncomplete rule\";\n    if (!isFieldCompleted) {\n      reason = \"Uncomplete LHS\";\n    } else {\n      reason = \"Uncomplete RHS\";\n      if (newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]) {\n        // eg. operator `starts_with` supports only valueSrc \"value\"\n        reason = `Bad value src ${newSerialized.valueSrc}`;\n      }\n    }\n    console.warn(\"[RAQB validate]\", \"Removing rule: \", oldSerialized, `Reason: ${reason}`);\n    item = undefined;\n  }\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipCheck = listValues || isAsyncListValues; \n\n    if (valueType && wType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !canSkipCheck) {\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const argDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix && !argConfig.isOptional) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      const hasValue = value.getIn([\"args\", argKey]);\n      if (!hasValue) {\n        if (defaultValue !== undefined) {\n          value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        }\n        if (argDefaultValueSrc) {\n          value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, canFix = false, isEndValue = true;\n      const [argValidError, _fixedArgVal] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n      );\n      if (argValidError)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentField = current.get(\"field\");\n  const currentFieldType = current.get(\"fieldType\");\n  //const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n\n  let canReuseValue = (currentField || isOkWithoutField) && currentOperator && newOperator && currentValue != undefined;\n  canReuseValue = canReuseValue\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp);\n  canReuseValue = canReuseValue\n    && (currentType && newType && currentType == newType);\n  if (canReuseValue && selectTypes.includes(newType) && changedProp == \"field\") {\n    const newListValuesType = newFieldConfig?.listValuesType;\n    const currentListValuesType = currentFieldConfig?.listValuesType;\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n\n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, true\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS.call(config.ctx, v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  const fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config.__funcsCntByType)\n        canAdd = canAdd && !!config.__funcsCntByType[fieldType];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\nexport const isEmptyItem = (item, config, liteCheck = false) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config, liteCheck);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config, liteCheck);\n  } else {\n    return isEmptyRule(item, config, liteCheck);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config, liteCheck = false) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config, liteCheck);\n};\n\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config, liteCheck = false) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    !isEmptyRuleProperties(properties, config, false),\n    cardinality > 0 ? true : !isEmptyGroupChildren(children, config, liteCheck),\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 2;\n  return !isFilled;\n};\n\nconst isEmptyGroup = (group, config, liteCheck = false) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config, liteCheck);\n};\n\nexport const isEmptyGroupChildren = (children, config, liteCheck = false) => {\n  return !children || children.size == 0\n    || children.size > 0 && children.filter(ch => !isEmptyItem(ch, config, liteCheck)).size == 0;\n};\n\nexport const isEmptyRuleProperties = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    liteCheck ? (field !== null || fieldType != null) : isCompletedValue(field, fieldSrc, config, liteCheck),\n    !!operator,\n    value.filter((val, delta) => \n      isCompletedValue(val, valueSrc?.get?.(delta) || valueSrc?.[delta], config, liteCheck)\n    ).size >= cardinality\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 3;\n  return !isFilled;\n};\n\nconst isEmptyRule = (rule, config, liteCheck = false) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties.toObject(), config, liteCheck);\n};\n\nexport const isCompletedValue = (value, valueSrc, config, liteCheck = false) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, liteCheck)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {\n  isJsonLogic,\n  isJSX,\n  isDirtyJSX,\n  cleanJSX,\n  shallowEqual,\n} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\n  \"conjunctions\",\n  \"fields\",\n  \"types\",\n  \"operators\",\n  \"widgets\",\n  \"settings\",\n  \"funcs\",\n  \"ctx\",\n];\n\n// type:\n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] }\n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: {\n    type: \"f\",\n    args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"],\n  },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: {\n    type: \"f\",\n    args: [\n      \"val\",\n      \"fieldDef\",\n      \"wgtDef\",\n      \"isForDisplay\",\n      \"op\",\n      \"opDef\",\n      \"rightFieldDef\",\n    ],\n  },\n  sqlFormatValue: {\n    type: \"f\",\n    args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"],\n  },\n  spelFormatValue: {\n    type: \"f\",\n    args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"],\n  },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: {\n    type: \"f\",\n    args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"],\n  },\n  elasticSearchFormatValue: {\n    type: \"f\",\n    args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"],\n  },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: {\n    type: \"f\",\n    args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"],\n  }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: {\n    // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: {\n    type: \"f\",\n    args: [\n      \"field\",\n      \"op\",\n      \"vals\",\n      \"valueSrc\",\n      \"valueType\",\n      \"opDef\",\n      \"operatorOptions\",\n      \"isForDisplay\",\n      \"fieldDef\",\n    ],\n  },\n  mongoFormatOp: {\n    type: \"f\",\n    args: [\n      \"field\",\n      \"op\",\n      \"vals\",\n      \"useExpr\",\n      \"valueSrc\",\n      \"valueType\",\n      \"opDef\",\n      \"operatorOptions\",\n      \"fieldDef\",\n    ],\n  },\n  sqlFormatOp: {\n    type: \"f\",\n    args: [\n      \"field\",\n      \"op\",\n      \"vals\",\n      \"valueSrc\",\n      \"valueType\",\n      \"opDef\",\n      \"operatorOptions\",\n      \"fieldDef\",\n    ],\n  },\n  spelFormatOp: {\n    type: \"f\",\n    args: [\n      \"field\",\n      \"op\",\n      \"vals\",\n      \"valueSrc\",\n      \"valueType\",\n      \"opDef\",\n      \"operatorOptions\",\n      \"fieldDef\",\n    ],\n  },\n  jsonLogic: {\n    type: \"f\",\n    ignore: \"string\",\n    args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"],\n  },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: {\n    type: \"f\",\n    args: [\"children\", \"conj\", \"not\", \"omitBrackets\"],\n  },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator,\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: {\n    type: \"f\",\n    args: [\n      \"leftField\",\n      \"leftFieldConfig\",\n      \"rightField\",\n      \"rightFieldConfig\",\n      \"op\",\n    ],\n  },\n  formatReverse: {\n    type: \"f\",\n    args: [\n      \"q\",\n      \"op\",\n      \"reversedOp\",\n      \"operatorDefinition\",\n      \"revOperatorDefinition\",\n      \"isForDisplay\",\n    ],\n  },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  celFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: {\n    type: \"f\",\n    args: [\n      \"field\",\n      \"parts\",\n      \"label2\",\n      \"fieldDefinition\",\n      \"config\",\n      \"isForDisplay\",\n    ],\n  },\n  formatSpelField: {\n    type: \"f\",\n    args: [\n      \"field\",\n      \"parentField\",\n      \"parts\",\n      \"partsExt\",\n      \"fieldDefinition\",\n      \"config\",\n    ],\n  },\n  formatAggr: {\n    type: \"f\",\n    args: [\n      \"whereStr\",\n      \"aggrField\",\n      \"operator\",\n      \"value\",\n      \"valueSrc\",\n      \"valueType\",\n      \"opDef\",\n      \"operatorOptions\",\n      \"isForDisplay\",\n      \"aggrFieldDef\",\n    ],\n  },\n\n  normalizeListValues: {\n    type: \"f\",\n    args: [\"listValues\", \"type\", \"fieldSettings\"],\n  },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType,\n      },\n      mainWidgetProps: compileMetaWidget,\n    },\n  },\n  widgets: {\n    x: compileMetaWidget,\n  },\n  conjunctions: {\n    x: compileMetaConjunction,\n  },\n  operators: {\n    x: compileMetaOperator,\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType,\n      },\n    },\n  },\n  funcs: {\n    x: compileMetaFunc,\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => typeof v == \"object\" && v !== null && !Array.isArray(v);\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base\n          = getFieldRawConfig(\n            {\n              funcs: meta.BasicFuncs,\n            },\n            funcKey,\n            \"funcs\",\n            \"subfields\"\n          ) || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (\n              !Object.keys(target).includes(k)\n              || (target[k] === undefined && base[k] !== undefined)\n            ) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(\n        `compressConfig: function at ${path.join(\n          \".\"\n        )} should be converted to JsonLogic`\n      );\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs,\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\n      \"Please enable `useConfigCompress` in config settings to use decompressConfig()\"\n    );\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (\n      isObject(target)\n      && Object.prototype.hasOwnProperty.call(target, \"$$key\")\n      && target[\"$$key\"]\n    ) {\n      const func = getFieldRawConfig(\n        {\n          funcs: meta.BasicFuncs,\n        },\n        target[\"$$key\"],\n        \"funcs\",\n        \"subfields\"\n      );\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(\n          `decompressConfig: basic function not found by key ${\n            target[\"$$key\"]\n          } at ${path.join(\".\")}`\n        );\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs,\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true,\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(\n        val,\n        opts,\n        newPath,\n        submeta.args,\n        submeta.ignore\n      );\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function (props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props,\n        ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props,\n        };\n      }\n\n      const ret = renderReactElement(re, { ctx }, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function (props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props,\n        };\n        const ret = renderReactElement(re, { ctx }, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function (...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce(\n        (acc, k, i) => ({ ...acc, [k]: args[i] }),\n        {\n          args,\n          ctx,\n        }\n      );\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function (...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(\n          `${path.join(\".\")} :: Function ${jl} is not found in ctx`\n        );\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(\n        `renderReactElement for ${path.join(\".\")}: type should be string`\n      );\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\" + i));\n  }\n  return jsx;\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, widgetDefKeysToOmit, deepFreeze} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nexport * from \"./configSerialize\";\n\n/////////////\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  // Clone (and compile if need)\n  if (canCompile && config.settings.useConfigCompress) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  _extendTypesConfig(config.types, config);\n  _extendFieldsConfig(config.fields, config);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  deepFreeze(config);\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPath = [...path, funcKey].join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPath} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config.__fieldsCntByType[fieldConfig.type])\n        config.__fieldsCntByType[fieldConfig.type] = 0;\n      config.__fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      fieldConfig._origDefaultOperator = fieldConfig.defaultOperator;\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const { fieldName, inGroup } = computeFieldName(config, path);\n  if (fieldName) {\n    fieldConfig.fieldName = fieldName;\n    if (!config.__fieldNames[fieldName])\n      config.__fieldNames[fieldName] = [];\n    config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n  }\n}\n\n/////////////\n\nconst mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n};\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  const typeConfig = config.types[funcConfig.returnType] || {};\n  return { ...typeConfig, ...funcConfig, type: funcConfig.returnType || funcConfig.type};\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      // if (!field.defaultOperator) {\n      //   // if not complete config..\n      //   // merge, but don't merge operators (rewrite instead)\n      //   const typeConfig = config.types[field.type] || {};\n      //   return mergeWith({}, typeConfig, field, mergeCustomizerNoArrays);\n      // }\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit;\n","import {\n  getFieldConfig,\n  getOperatorConfig,\n  getFieldWidgetConfig,\n  getFuncConfig,\n  getFieldParts,\n  extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels,\n  getWidgetForFieldOp,\n  formatFieldName,\n  completeValue,\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {\n  defaultValue,\n  widgetDefKeysToOmit,\n  opDefKeysToOmit,\n} from \"../utils/stuff\";\nimport { defaultConjunction } from \"../utils/defaultUtils\";\nimport { List, Map } from \"immutable\";\nimport { celEscape } from \"../utils/export\";\n\nexport const celFormat = (tree, config) => {\n  return _celFormat(tree, config, false);\n};\n\nexport const _celFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to CEL:\", meta.errors);\n    return res;\n  }\n};\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if (type === \"group\" || type === \"rule_group\") {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = type === \"rule_group\";\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction) conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.celFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const celOp = operatorDefinition.celOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} ${celOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} ${celOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${celOp} ${valFrom} && ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null) return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.celOp || opDef.celFormatOp;\n  const canFormatRevOp = revOpDef.celOp || revOpDef.celFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(\n      getFieldWidgetConfig(config, field, operator, widget, valueSrc),\n      [\"factory\"]\n    );\n    let fv = formatValue(\n      meta,\n      config,\n      cValue,\n      valueSrc,\n      valueType,\n      fieldWidgetDefinition,\n      fieldDefinition,\n      operator,\n      opDef,\n      asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter((v) => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality) return undefined;\n  const formattedValue = cardinality == 1 ? fvalue.first() : fvalue;\n\n  //find fn to format expr\n  const fn = opDef.celFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format field\n  const formattedField\n    = fieldSrc == \"func\"\n      ? formatFunc(meta, config, field)\n      : formatField(meta, config, field);\n  if (formattedField == undefined) return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrcs.length > 1 ? valueSrcs : valueSrcs[0],\n    valueTypes.length > 1 ? valueTypes : valueTypes[0],\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.celFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(\n      `Operator ${operator} is not supported for value source ${valueSrcs.join(\n        \", \"\n      )}`\n    );\n    return undefined;\n  }\n  return ret;\n};\n\nconst formatValue = (\n  meta,\n  config,\n  currentValue,\n  valueSrc,\n  valueType,\n  fieldWidgetDef,\n  fieldDef,\n  operator,\n  operatorDef,\n  asyncListValues\n) => {\n  if (currentValue === undefined) return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.celFormatValue === \"function\") {\n      const fn = fieldWidgetDef.celFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues,\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {};\n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map((v) => celEscape(v));\n      } else {\n        ret = celEscape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const { fieldSeparator } = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels\n    ? fieldPartsLabels.join(fieldSeparator)\n    : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {\n    useTableName: true,\n  });\n  const formattedField = formatFieldFn(\n    fieldName,\n    fieldParts,\n    fieldFullLabel,\n    fieldDefinition,\n    config\n  );\n  return formattedField;\n};\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length - 1];\n  const funcName = funcConfig.celFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const { defaultValue, isOptional } = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal\n      ? argVal.get(\"asyncListValues\")\n      : undefined;\n    const formattedArgVal = formatValue(\n      meta,\n      config,\n      argValue,\n      argValueSrc,\n      argConfig.type,\n      fieldDef,\n      argConfig,\n      null,\n      null,\n      argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\")\n        // don't triger error if args value is another uncomplete function\n        meta.errors.push(\n          `Can't format value of arg ${argKey} for func ${funcKey}`\n        );\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (\n      formattedArgVal === undefined\n      && !isOptional\n      && defaultValue != undefined\n    ) {\n      formattedDefaultVal = formatValue(\n        meta,\n        config,\n        defaultValue,\n        defaultValueSrc,\n        argConfig.type,\n        fieldDef,\n        argConfig,\n        null,\n        null,\n        argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\")\n          // don't triger error if args value is another uncomplete function\n          meta.errors.push(\n            `Can't format default value of arg ${argKey} for func ${funcKey}`\n          );\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional) missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.celFormatFunc === \"function\") {\n    const fn = funcConfig.celFormatFunc;\n    const args = [formattedArgs];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"] );\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"] );\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // uncomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, isForDisplay, parentField)\n    : formatField(config, meta, field, isForDisplay, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  celFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({ date, op, val, dim }) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = { type: \"string\", val: op };\n          dim = { type: \"string\", val: dim };\n          val = spel.args[0];\n          date = spel.obj;\n          return { date, op, val, dim };\n        }\n      }\n    }\n  },\n  jsonLogic: ({ date, op, val, dim }) => ({\n    date_add: [date, val * (op == \"minus\" ? -1 : +1), dim],\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({ date, op, val, dim }) =>\n    `DATE_ADD(${date}, INTERVAL ${\n      parseInt(val) * (op == \"minus\" ? -1 : +1)\n    } ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({ date, op, val, dim }) =>\n    !val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`,\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: { func: \"NOW\", args: [] },\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false,\n        },\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false,\n        },\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  },\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  },\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  },\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({ coef, bias, val }, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({ coef, bias, val }) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({ coef, bias, val }) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return { coef, val, bias };\n      }\n    }\n  },\n  celFormatFunc: ({ coef, bias, val }) => `(${coef} * ${val} + ${bias})`,\n  mongoFormatFunc: ({ coef, bias, val }) => ({\n    $sum: [{ $multiply: [coef, val] }, bias],\n  }),\n  jsonLogic: ({ coef, bias, val }) => ({ \"+\": [{ \"*\": [coef, val] }, bias] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    },\n  },\n};\n\nexport { LOWER, UPPER, NOW, RELATIVE_DATETIME, LINEAR_REGRESSION };\n","import moment from \"moment\";\nimport {\n  SqlString,\n  sqlEmptyValue,\n  mongoEmptyValue,\n  spelEscape,\n  celEscape,\n  spelFixList,\n  stringifyForDisplay,\n} from \"../utils/export\";\nimport { escapeRegExp } from \"../utils/stuff\";\nimport { getTitleInListValues } from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (\n  mop,\n  mc,\n  not,\n  field,\n  _op,\n  value,\n  useExpr,\n  valueSrc,\n  valueType,\n  opDef,\n  operatorOptions,\n  fieldDef\n) => {\n  const $field\n    = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined) return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\")) return { [field]: { $ne: mv } }; // short form\n    return !useExpr\n      ? { [field]: { $not: { [mop]: mv } } }\n      : { $not: { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\")) return { [field]: mv }; // short form\n    return !useExpr ? { [field]: { [mop]: mv } } : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (\n  mops,\n  not,\n  field,\n  _op,\n  values,\n  useExpr,\n  valueSrcs,\n  valueTypes,\n  opDef,\n  operatorOptions,\n  fieldDef\n) => {\n  const $field\n    = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { $not: { [mops[0]]: values[0], [mops[1]]: values[1] } } }\n      : {\n        $not: {\n          $and: [\n            { [mops[0]]: [$field, values[0]] },\n            { [mops[1]]: [$field, values[1]] },\n          ],\n        },\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } }\n      : {\n        $and: [\n          { [mops[0]]: [$field, values[0]] },\n          { [mops[1]]: [$field, values[1]] },\n        ],\n      };\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    celEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import { settings as defaultSettings } from \"./default\";\nimport ctx from \"./ctx\";\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    celConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\")\n            + \"(\"\n            + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \")\n            + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\")\n            + (omitBrackets ? \"\" : \"(\")\n            + children.join(\" \" + \"&&\" + \" \")\n            + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    celFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + \"(\" + children.join(\" \" + \"&&\" + \" \") + \")\"\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    celConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\")\n            + \"(\"\n            + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \")\n            + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\")\n            + (omitBrackets ? \"\" : \"(\")\n            + children.join(\" \" + \"||\" + \" \")\n            + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    celFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + \"(\" + children.join(\" \" + \"||\" + \" \") + \")\"\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    celOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrcs,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      isForDisplay,\n      fieldDef\n    ) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$eq\", (v) => v, false, ...args);\n    },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    celOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrcs,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      isForDisplay,\n      fieldDef\n    ) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$ne\", (v) => v, false, ...args);\n    },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    celOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$lt\", (v) => v, false, ...args);\n    },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    celOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$lte\", (v) => v, false, ...args);\n    },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    celOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$gt\", (v) => v, false, ...args);\n    },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    celOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$gte\", (v) => v, false, ...args);\n    },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    celOp: \"${1} in ${0}\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\n        \"$regex\",\n        (v) => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined),\n        false,\n        ...args\n      );\n    },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\n        \"$regex\",\n        (v) => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined),\n        true,\n        ...args\n      );\n    },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    celOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\n        \"$regex\",\n        (v) =>\n          typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined,\n        false,\n        ...args\n      );\n    },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\n        \"$regex\",\n        (v) =>\n          typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined,\n        false,\n        ...args\n      );\n    },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrcs,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay) return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    celFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      const valFrom = values?._tail?.array[0];\n      const valTo = values?._tail?.array[1];\n      return `(${field} >= ${valFrom} && ${field} <= ${valTo})`;\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args);\n    },\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrcs,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay) return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    celFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      const valFrom = values?._tail?.array[0];\n      const valTo = values?._tail?.array[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args);\n    },\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    celFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\n        \"$in\",\n        (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null],\n        false,\n        ...args\n      );\n    },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\n        \"$nin\",\n        (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null],\n        false,\n        ...args\n      );\n    },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} == null`;\n    },\n    celFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$eq\", (v) => null, false, ...args);\n    },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueTypes,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$ne\", (v) => null, false, ...args);\n    },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    celOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$eq\", (v) => v, false, ...args);\n    },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (\n      field,\n      op,\n      value,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    celOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$ne\", (v) => v, false, ...args);\n    },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      if (valueSrc == \"value\") return `${field} IN (${values.join(\", \")})`;\n      else return `${field} IN (${values})`;\n    },\n    celFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      return `${values} in ${field}`;\n    },\n    sqlFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$in\", (v) => v, false, ...args);\n    },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      if (valueSrc == \"value\") return `${field} NOT IN (${values.join(\", \")})`;\n      else return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$nin\", (v) => v, false, ...args);\n    },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else return `${field} CONTAINS ${values}`;\n    },\n    celFormatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      return `${values} in ${field}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      some: [field, { in: [{ var: \"\" }, vals] }],\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$in\", (v) => v, false, ...args);\n    },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) {\n      if (valueSrc == \"value\")\n        // set\n        return `${field} = '${values\n          .map((v) => this.utils.SqlString.trim(v))\n          .join(\",\")}'`;\n      else return undefined; //not supported\n    },\n    celOp: \"==\",\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$eq\", (v) => v, false, ...args);\n    },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      all: [field, { in: [{ var: \"\" }, vals] }],\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      if (valueSrc == \"value\") return `${field} != [${values.join(\", \")}]`;\n      else return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) {\n      if (valueSrc == \"value\")\n        // set\n        return `${field} != '${values\n          .map((v) => this.utils.SqlString.trim(v))\n          .join(\",\")}'`;\n      else return undefined; //not supported\n    },\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$ne\", (v) => v, false, ...args);\n    },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      isForDisplay\n    ) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (\n      field,\n      op,\n      values,\n      valueSrc,\n      valueType,\n      opDef,\n      operatorOptions,\n      fieldDef\n    ) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2,\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$gt\", (v) => 0, false, ...args);\n    },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) =>\n      `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$eq\", (v) => v, false, ...args);\n    },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function (...args) {\n      return this.utils.mongoFormatOp1(\"$eq\", (v) => 0, false, ...args);\n    },\n  },\n};\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay\n        ? this.utils.stringifyForDisplay(val)\n        : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    celFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.celEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(\n          val,\n          op != \"starts_with\",\n          op != \"ends_with\"\n        );\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay\n        ? this.utils.stringifyForDisplay(val)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(\n          val,\n          op != \"starts_with\",\n          op != \"ends_with\"\n        );\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val);\n    },\n    celFormatValue: function (val) {\n      return this.utils.celEscape(val);\n    },\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay\n        ? this.utils.stringifyForDisplay(val)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    celFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.celEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay\n        ? this.utils.stringifyForDisplay(val)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val);\n    },\n    celFormatValue: function (val) {\n      return this.utils.celEscape(val);\n    },\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(\n        fieldDef.fieldSettings.listValues || fieldDef.asyncListValues,\n        val\n      );\n      return isForDisplay\n        ? this.utils.stringifyForDisplay(valLabel)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val);\n    },\n    celFormatValue: function (val) {\n      return this.utils.celEscape(val);\n    },\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map((v) =>\n        this.utils.getTitleInListValues(\n          fieldDef.fieldSettings.listValues || fieldDef.asyncListValues,\n          v\n        )\n      );\n      return isForDisplay\n        ? valsLabels.map(this.utils.stringifyForDisplay)\n        : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map((v) => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    celFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.celEscape(vals); // inline list\n      return res;\n    },\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay\n        ? dateVal.format(wgtDef.dateFormat)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          { var: \"v\" },\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [{ var: \"fmt\" }],\n          },\n        ],\n      },\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef) return [undefined, \"No widget def to get value format\"];\n      if (\n        args?.fmt?.value?.includes?.(\" \")\n        || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\")\n      )\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    celFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    celImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          { var: \"v\" },\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [{ var: \"fmt\" }],\n          },\n        ],\n      },\n    ],\n    celImportValue: function (val, wgtDef, args) {\n      if (!wgtDef) return [undefined, \"No widget def to get value format\"];\n      if (\n        args?.fmt?.value?.includes?.(\" \")\n        || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\")\n      )\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay\n        ? dateVal.format(wgtDef.timeFormat)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef) return [undefined, \"No widget def to get value format\"];\n      if (\n        args?.fmt\n        && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\")\n          || args.fmt?.value?.includes(\" \"))\n      )\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    celFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    celImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    celImportValue: function (val, wgtDef, args) {\n      if (!wgtDef) return [undefined, \"No widget def to get value format\"];\n      if (\n        args?.fmt\n        && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\")\n          || args.fmt?.value?.includes(\" \"))\n      )\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return (\n        dateVal.get(\"hour\") * 60 * 60\n        + dateVal.get(\"minute\") * 60\n        + dateVal.get(\"second\")\n      );\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid()\n        ? dateVal.get(\"hour\") * 60 * 60\n            + dateVal.get(\"minute\") * 60\n            + dateVal.get(\"second\")\n        : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return (\n        dateVal.get(\"hour\") * 60 * 60\n        + dateVal.get(\"minute\") * 60\n        + dateVal.get(\"second\")\n      );\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(\n      queryType,\n      value,\n      operator,\n      fieldName\n    ) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\"\n              .concat(fieldName, \"][0].getHour() >== params.min && doc[\")\n              .concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1],\n            },\n          },\n        },\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay\n        ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat)\n        : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          { var: \"v\" },\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [{ var: \"fmt\" }],\n          },\n        ],\n      },\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef) return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [\n          undefined,\n          `Invalid datetime format ${JSON.stringify(args.fmt)}`,\n        ];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    celFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    celImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          { var: \"v\" },\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [{ var: \"fmt\" }],\n          },\n        ],\n      },\n    ],\n    celImportValue: function (val, wgtDef, args) {\n      if (!wgtDef) return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [\n          undefined,\n          `Invalid datetime format ${JSON.stringify(args.fmt)}`,\n        ];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    celFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.celEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => val,\n    mongoFormatValue: (val, fieldDef, wgtDef) => val,\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (\n      val,\n      fieldDef,\n      wgtDef,\n      isForDisplay,\n      op,\n      opDef,\n      rightFieldDef\n    ) => {\n      return isForDisplay ? rightFieldDef.label || val : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    celFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    celFormatValue: function (val) {\n      return this.utils.celEscape(val === \"\" ? null : val);\n    },\n    celImportValue: (val) => {\n      return [val.value, []];\n    },\n  },\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      },\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\"equal\", \"not_equal\", \"is_null\", \"is_not_null\"],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        },\n      },\n      field: {\n        operators: [\"equal\", \"not_equal\"],\n      },\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0,\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\",\n          },\n          not_equal: {\n            label: \"Count !=\",\n          },\n          less: {\n            label: \"Count <\",\n          },\n          less_or_equal: {\n            label: \"Count <=\",\n          },\n          greater: {\n            label: \"Count >\",\n          },\n          greater_or_equal: {\n            label: \"Count >=\",\n          },\n          between: {\n            label: \"Count between\",\n          },\n          not_between: {\n            label: \"Count not between\",\n          },\n        },\n      },\n    },\n  },\n  case_value: {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {},\n    },\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    number: [\"slider\", \"rangeslider\"],\n    slider: [\"number\", \"rangeslider\"],\n    rangeslider: [\"number\", \"slider\"],\n    text: [\"textarea\"],\n    textarea: [\"text\"],\n  },\n\n  formatCelField: function (\n    field,\n    parentField,\n    parts,\n    partsExt,\n    fieldDefinition,\n    config\n  ) {\n    let fieldName = partsExt\n      .map(({ key, parent, fieldSeparator: sep }, ind) => {\n        return `${ind ? sep : \"\"}${key}`;\n      })\n      .join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    return fieldName;\n  },\n\n  formatSpelField: function (\n    field,\n    parentField,\n    parts,\n    partsExt,\n    fieldDefinition,\n    config\n  ) {\n    let fieldName = partsExt\n      .map(({ key, parent, fieldSeparator: sep }, ind) => {\n        if (ind == 0) {\n          if (parent == \"[map]\") return `#this[${this.utils.spelEscape(key)}]`;\n          else if (parent == \"[class]\") return key;\n          else return key;\n        } else {\n          if (parent == \"map\" || parent == \"[map]\")\n            return `[${this.utils.spelEscape(key)}]`;\n          else if (parent == \"class\" || parent == \"[class]\")\n            return `${sep}${key}`;\n          else return `${sep}${key}`;\n        }\n      })\n      .join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  celFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (\n    q,\n    operator,\n    reversedOp,\n    operatorDefinition,\n    revOperatorDefinition,\n    isForDisplay\n  ) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay) return \"NOT (\" + q + \")\";\n    else return \"!(\" + q + \")\";\n  },\n  formatAggr: (\n    whereStr,\n    aggrField,\n    operator,\n    value,\n    valueSrc,\n    valueType,\n    opDef,\n    operatorOptions,\n    isForDisplay,\n    aggrFieldDef\n  ) => {\n    const { labelForFormat, cardinality } = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\",\n  },\n\n  canCompareFieldWithField: (\n    leftField,\n    leftFieldConfig,\n    rightField,\n    rightFieldConfig\n  ) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\",\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    },\n  },\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\" : \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget\n  = (type, widget) =>\n    (config, addMixin = true) => {\n      let { types } = config;\n\n      types = {\n        ...types,\n        [type]: {\n          ...types[type],\n          widgets: {\n            ...types[type].widgets,\n          },\n        },\n      };\n\n      if (addMixin) {\n        types[type].widgets[widget] = {\n          opProps: {\n            between: {\n              isSpecialRange: true,\n              textSeparators: [null, null],\n            },\n            not_between: {\n              isSpecialRange: true,\n              textSeparators: [null, null],\n            },\n          },\n          ...types[type].widgets[widget],\n        };\n      } else {\n        delete types[type].widgets[widget];\n      }\n\n      return {\n        ...config,\n        types,\n      };\n    };\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay\n          ? this.utils.stringifyForDisplay(val)\n          : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      celFormatValue: function (val) {\n        return this.utils.celEscape(val);\n      },\n      spelFormatValue: function (val) {\n        return this.utils.spelEscape(val);\n      },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => val,\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      },\n    },\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        },\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData\n          = fieldDef.fieldSettings.treeValues\n          || fieldDef.fieldSettings.listValues\n          || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay\n          ? this.utils.stringifyForDisplay(valLabel)\n          : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) {\n        return this.utils.spelEscape(val);\n      },\n      celFormatValue: function (val) {\n        return this.utils.SqlString.escape(val);\n      },\n      toJS: (val, fieldSettings) => val,\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\"select_equals\", \"select_not_equals\"],\n        },\n        treemultiselect: {\n          operators: [\"select_any_in\", \"select_not_any_in\"],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData\n          = fieldDef.fieldSettings.treeValues\n          || fieldDef.fieldSettings.listValues\n          || fieldDef.asyncListValues;\n        let valsLabels = vals.map((v) =>\n          this.utils.getTitleInListValues(treeData, v)\n        );\n        return isForDisplay\n          ? valsLabels.map(this.utils.stringifyForDisplay)\n          : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map((v) => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) {\n        return this.utils.spelEscape(val);\n      },\n      celFormatValue: function (val) {\n        return this.utils.celEscape(val);\n      },\n      toJS: (val, fieldSettings) => val,\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\"multiselect_equals\", \"multiselect_not_equals\"],\n        },\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\"rangeslider\", \"treeselect\", \"treemultiselect\"]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp, isEmptyItem, selectTypes\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const {keepInputOnChangeFieldSrc} = config.settings;\n\n  // get fieldType for \"memory effect\"\n  const currentRule = state.getIn(expandTreePath(path));\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  //const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const currentFielType = currentProperties.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config, true) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config, asyncListValues, __isInternal) => {\n  let isInternalValueChange;\n  if (!newField)\n    return {tree: removeItem(state, path), isInternalValueChange};\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage, keepInputOnChangeFieldSrc} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {tree: state, isInternalValueChange};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {tree: state, isInternalValueChange};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", true\n      );\n      if (showErrorMessage) {\n        current = current\n          .set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n      isInternalValueChange = __isInternal; //todo: filter edge cases?\n      return current\n        .set(\"field\", newField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType)\n        .delete(\"asyncListValues\");\n    }));\n  }\n\n  return {tree: state, isInternalValueChange};\n\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, true\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS\n        ? values.map(v => fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition))\n        : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree, setLastTree) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {tree, isInternalValueChange} = setField(\n        state.tree, action.path, action.field, action.config,\n        action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, __isInternal) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config,\n  asyncListValues,\n  __isInternal,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import, ConfigMixins};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldParts, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, label);\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, label);\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, fieldSrc, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config: config,\n    field: field,\n    fieldSrc: fieldSrc,\n    fieldType: fieldType,\n    isLHS: isLHS,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\", \"isLHS\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n    if (!field) {\n      valueSources = Object.keys(config.settings.valueSourcesInfo);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className={classNames(\n        valueSrc == \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal, asyncListValues, __isInternal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValue(this.props.value, argKey, argVal, argDefinition, config),\n      asyncListValues,\n      __isInternal\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config),\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, _widgetType, asyncListValues, __isInternal) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, asyncListValues, __isInternal);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {config, classname, selectedField, selectedFieldSrc, selectedFieldType, setField, parentField, readonly, id, groupId} = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        parentField={parentField}\n        setValue={setField}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { settings } = config;\n    const {\n      fieldSources,\n      valueSourcesInfo,\n      renderValueSources,\n    } = settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSources.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldParts} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldParts = getFieldParts(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldParts, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFieldSrc,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldParts, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldParts={selectedFieldParts}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}, config.ctx) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { showDragIcon } = this.meta;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      renderIcon,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config} renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn} from \"../utils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError : null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type];\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon || null;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : staticListValues;\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label;\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["mapListValues","Utils","ListUtils","useListValuesAutocomplete","Hooks","nonCheckedIcon","React","CheckBoxOutlineBlankIcon","fontSize","style","marginRight","marginTop","checkedIcon","CheckBoxIcon","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","defaultSearchWidth","_ref","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","inputWidth","omit","customAutocompleteProps","minWidth","undefined","placeholder","useStyles","makeStyles","theme","classesChip","root","height","label","marginBottom","useStylesChip","classes","FormControl","fullWidth","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_selectedListValue$ti","shouldRenderSelected","selectedTitle","title","TextField","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","color","size","error","renderTags","getTagProps","index","className","titleSpan","Chip","key","renderOption","_ref2","selected","renderTitle","specialValue","isHidden","Box","filterOptions","filtered","mapFieldItemToOptionKeys","path","altLabel","tooltip","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","e","val","target","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","_window","_window$matchMedia","_window2","dateFormat","valueFormat","Picker","window","matchMedia","call","matches","useKeyboard","KeyboardDatePicker","DatePicker","format","isValid","formatSingleValue","MaterialDateTimeWidget","use12Hours","timeFormat","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","moment","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","_ref3","filter","v","shift","getListValueTitle","MenuItem","MaterialNumberWidget","min","max","step","numberValue","type","Number","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","slider","sliderValue","muiMarks","Object","keys","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","textSeparators","useEffect","_slicedToArray","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","_toConsumableArray","_sliderValue","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","Switch","checked","MaterialMultiSelectWidget","selectedValues","selectedTitles","Checkbox","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","fields","field","Array","isArray","some","pop","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","MaterialIcon","icon","Icon","MaterialButton","onClick","renderIcon","IconButton","Button","startIcon","MaterialButtonGroup","children","MaterialConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","bind","_conjunctionOptions$k","name","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MaterialValueSources","valueSources","valueSrc","setValueSrc","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharpIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","srcKey","info","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","locale","themeConfig","material","createTheme","base","withProviders","MuiPickersUtilsProvider","utils","MomentUtils","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","_ref4","renderSwitch","_ref5","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MaterialWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","formatField","parts","label2","fieldDefinition","isForDisplay","fieldSources","keepInputOnChangeFieldSrc","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","isObject","_typeof","widgetDefKeysToOmit","opDefKeysToOmit","defaultValue","_default","deepEqual","v1","v2","Map","isMap","equals","JSON","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","includes","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","obj","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","_key","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","depth","collapsed","childrenIds","_child","toArray","isRuleGroup","isLeaf","hasChildren","itemsBefore","top","parent","isDefaultCase","leaf","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","parse","checkTree","extendedConfig","extendConfig","validateTree","isValidTree","fromJS","outValue","toOrderedMap","_outValue$get","isIndexed","_v$toJS","vJs","func","toList","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","errors","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","cardinality","jsonLogic2","conjunctions","conjKey","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedType","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertConj","convertOp","afterErrorsCnt","_fieldConfig$fieldSet","widgetConfig","mainWidget","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","valueType","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","jsonLogicImport","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","fromEntries","split","ancs","fp","conjunction","uuid","groupToId","entries","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","isGroup0","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","isGroup","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","group","parsedGroup","convertLhs","op2","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelEscapeString","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","Error","spelInlineList","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","celEscape","celInlineList","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","cases","currentChild","filteredCases","left","right","_filteredCases$_i","cond","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","getSize","fullSize","filteredSize","formatExpression","opDef","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","_","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","formattedArgs","gaps","missingArgKeys","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","isRoot","itype","_lastChild","_lastChild2","getRaw","getValue","flatizeTernary","functionName","qid","cls","_val","isVar","_processTernaryChildren","tern","_tern","if_val","else_val","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","widgetDef","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","caseI","buildCase","convertArg","sw","buildSimpleSwitch","isUnary","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$children","at","_values$","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","p","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_loop5","_argsArr$filter$find","_step10$value","parseInt","_ret2","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","importCaseValue","_importCaseValue","_importCaseValue2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","getDefaultOperator","defaultOperator","fieldOperators","fieldDefaultOperator","getFirstOperator","_origDefaultOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListFromArray","ids","emptyProperies","validateAndFixTree","_oldTree","newConfig","oldConfig","removeEmptyGroups","removeIncompleteRules","validateItem","oldChildren","sanitized","validateGroup","_field","_field$toJS","_field2","_field2$toJS","oldSerialized","getFieldSrc","availOps","getOperatorsForField","newSerialized","isValueCompleted","delta","isCompletedValue","isFieldCompleted","isCompleted","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","reason","validateRule","validateValue","leftField","canFix","isEndValue","isRawValue","validError","fixedValue","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fieldWidgetDefinition","rightFieldDefinition","validResult","wConfig","wType","jsType","treeValues","isAsyncListValues","canSkipCheck","typeOf","realListValues","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","plural","validateValueInList","_valueSrc","isFuncArg","_isFuncArg","leftFieldStr","rightFieldStr","argDef","_validateValue","_validateValue2","argValidError","fixedArgVal","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","firstValueSrc","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","selectTypes","listValuesType","newField","newOperator","changedProp","currentField","currentFieldType","currentOperator","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","canReuseValue","newListValuesType","currentListValuesType","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","_newFieldConfig$field","validateValues","jsValues","rangeValidateError","vt","parentPathArr","firstField","getFieldRawConfig","keysPath","_firstField","subfields","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","useTableName","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","liteCheck","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_valueSrc$get","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","formatConj","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","celFormatReverse","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","prototype","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_i2","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","this","argNames","_ctx$components","_props","Cmp","components","O","_marked2","_regeneratorRuntime","iterateFields","allowArrayLike","Symbol","iterator","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","F","TypeError","normalCompletion","didErr","_e2","configId","canCompile","__configId","mergeWith","defaultSettings","mergeCustomizerNoArrays","typesConfig","_extendTypeConfig","_extendTypesConfig","_extendFieldsConfig","_extendFuncArgsConfig","momentLocale","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","_extendFieldConfig","funcDef","tmpIsOptional","excludeOperatorsForField","_keysToPutInFieldSett","excludeOperatorsForType","shouldIncludeOperators","addOperators","_computeFieldName","computeFieldName","inGroup","fullPath","objValue","srcValue","_object","_source","_stack","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_config$settings2","fieldKey","_context3","t0","t1","_config$settings3","targetFields","_reduce","computedPath","computed","fConfig","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","getFieldPathParts","onlyKeys","_field$get3","_field$get4","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","_widgetDefKeysToOmit","celFormat","_celFormat","celFormatConj","celOp","celFormatOp","valFrom","valTo","celFormatValue","fieldPartsLabels","fieldFullLabel","funcParts","funcLastKey","funcName","celFunc","celFormatFunc","argsStr","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","jsonLogicFormat","usedFields","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","ruleQuery","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","sep","hasParentRuleGroup","realParentPath","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","rules","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","queryBuilderFormat","condition","_valueType","secondField","queryString","conjStr","aggrArgs","returnArgs","revOperatorDef","fop","labelForFormat","_operator","_fn","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","sqlFormat","_sqlFormat","sqlOp","sqlFunc","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","$sum","$multiply","mongoFormatOp1","mop","mc","_op","$field","mv","$not","$ne","mongoFormatOp2","mops","_$not3","$and","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_values$_tail","_values$_tail2","_tail","array","_this$utils11","_len11","_key11","not_between","_values$_tail3","_values$_tail4","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","in","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","celImportFuncs","celImportValue","_args$fmt3","_args$fmt3$includes","_args$fmt4","_args$fmt4$toLowerCas","_args$fmt5","_args$fmt5$toLowerCas","_args$fmt6","_args$fmt7","_args$fmt7$toLowerCas","_args$fmt8","_args$fmt9","_args$fmt9$includes","_args$fmt10","_args$fmt10$includes","rightFieldDef","case_value","formatCelField","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","leftFieldConfig","rightFieldConfig","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","celConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","canAddNewRule","origState","addItem","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","_Immutable$OrderedMap2","newChildrenWithLast","mergeIn","removeItem","emptyDrag","dragging","y","mousePos","dragStart","setTree","constants","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","placement","setLock","lock","__isInternal","setFieldSrc","setOperator","setOperatorOption","BasicUtils","Export","Import","getMemoizedTree","setLastTree","emptyState","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","_setField","_newFieldConfig$opera","isInternalValueChange","currentProperties","wasRuleGroup","currentFieldSrc","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","strategy","groupProperties","updateIn","_getNewValueForFieldO2","newOperatorOptions","__isInternalValueChange","currentRule","currentFielType","_getNewValueForFieldO3","_setValue","calculatedValueType","calculateValueType","isLastEmpty","isLastError","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","_Utils$ConfigUtils","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","savedConfig","_ret3","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","_ret","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_inherits","_super","_classCallCheck","_assertThisInitialized","nextValue","oldValidatedTree","_updateActions","sanitizeTree","_createClass","actions","newBasicConfig","getBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","lastTree","prevTree","prevprevTree","prevValue","_createConfigMemo","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_class","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","_config$types$selecte","selectedField","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","renderProps","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldParts","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroupLabel","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","FuncSelect","needUpdateItems","getItems","isLHS","parentFuncs","canUseFuncForField","filteredFuncs","filterFuncs","_leftFieldConfig$widg","selectedFuncKey","isFuncSelected","leftFieldWidgetField","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","widgetFactory","isConst","funcArgDummyOpDef","Widget","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","WidgetFactory","_widgets$delta2","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGroup","isCaseValue","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_widgetDefinition","_this$meta","_Utils$FuncUtils","FuncUtils","FuncWidget","_createSuper","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props2","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_Component2","_super2","_delta","_widgetType","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","_this$props3","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","_this$props4","immutableValuesMode","_this$props5","oneValueError","onMouseDown","_this$props6","immutableGroupsMode","Btn","_this$props7","showLock","_this$meta2","_this$props8","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","selectedFieldPartsLabels","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","_Utils$TreeUtils","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","customPlaceholder","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}